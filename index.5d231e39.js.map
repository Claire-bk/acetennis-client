{"mappings":"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","sources":["src/service/app.js"],"sourcesContent":["const baseURL = \"https://acetennis.herokuapp.com\";\n\nwindow.onload = () => {\n    // let theme = document.getElementsByTagName(\"link\")[0];\n  if (localStorage.getItem(\"DarkTheme\") === \"true\") {\n    document.getElementById(\"darkmode\").checked = true;\n    document.documentElement.classList.toggle(\"dark-mode\");\n  } else {\n    document.getElementById(\"darkmode\").checked = false;\n  }\n\n  if(localStorage.getItem(\"PlayerId\")) {\n    displayJoinMatch('cancel');\n  } else {\n      displayJoinMatch('join');\n  }\n\n  if(sessionStorage.getItem(\"isLogin\") === \"true\" && sessionStorage.getItem(\"username\")) {\n      document.querySelector('.icon__join').classList.add('invisible');\n      document.querySelector('.icon__logout').classList.remove('invisible');\n  }\n  else {\n    document.querySelector('.icon__logout').classList.add('invisible');\n  }\n};\n\n// Service worker registration\n// if('serviceWorker' in navigator) {\n//     // Register a service worker hosted at the root of the\n//     // site using the default scope.\n//     navigator.serviceWorker\n//         .register('../../sw.js',)\n//         .then(function(registration) {\n//         })\n//         .catch(function(error) {\n//             console.log('Service worker registration failed, error: ', error);\n//         });\n// }\n\n// navbar\nconst navBarIcon = document.querySelector('.navBar__icon');\nconst navBarMenu = document.querySelector('.navBar__menu');\nconst icon = document.querySelector('.icon');\nconst navBarLogo = document.querySelector('.navBar__logo')\n\n// go to home\nnavBarLogo.addEventListener('click', () => {  \n    navBarLogo.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\n});\n\n// navBar toggle\nnavBarIcon.addEventListener('click', () => {\n    navBarMenu.classList.toggle('open');\n});\n\n// Handle scrolling when tapping on the navbar menu\nnavBarMenu.addEventListener('click', (event) => {\n    const target = event.target;\n    const link = target.dataset.link;\n\n    if(link == null) {\n        return;\n    }\n\n    const element = document.querySelector(link);\n    element.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\n    navBarMenu.classList.toggle('open');\n});\n\n// link to sign up page\nconst signUp = document.querySelector('.icon__join');\nsignUp.addEventListener('click', (event) => {\n    window.location = '../public/component/signup.html';\n})\n\n// dark mode\nconst themeToggle = document.querySelector('#darkmode');\nthemeToggle.addEventListener('change', (event) => {\n    let checked = event.target.checked;\n    console.log(\"darkmode ${checked\")\n\n    if(checked) {\n        localStorage.setItem(\"DarkTheme\", \"true\");\n        document.documentElement.classList.toggle(\"dark-mode\");\n    } else {\n        localStorage.setItem(\"DarkTheme\", \"false\");\n        document.documentElement.classList.toggle(\"dark-mode\");\n    }\n})\n\n// logout\nconst logout = document.querySelector('.icon__logout');\nlogout.addEventListener('click', () => {\n    sessionStorage.clear();\n    localStorage.clear();\n    window.location = 'index.html';\n})\n\n// draw calendar\nconst date = new Date();\nconst monthNum = date.getMonth();\nconst fullYear = date.getFullYear();\nconst today = date.getDate();\nconst monthString = ['January', 'Febrary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst lastDayOfMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nlet currMonth = monthNum; // 0 to 11\nlet currYear = fullYear;\n// set month\nconst month = document.querySelector('.month');\nmonth.innerHTML = monthString[monthNum];\n// set days\nif ((fullYear % 4 == 0 && fullYear % 100 != 0) || fullYear % 400 == 0) {\n    // leap year setting\n    lastDayOfMonth[1] = 29;\n}\n\nconst days = document.querySelector('.days');\nfor(let i=1; i<=lastDayOfMonth[monthNum]; i++) {\n    if( i === today) {\n        days.innerHTML += `<li class=\"day\" data-day=\"${i}\"><span class=\"active\">${i}</span></li>`;\n    } else {\n        days.innerHTML += `<li class=\"day\" data-day=\"${i}\">${i}</li>`;\n    }\n}\n\ndays.addEventListener('click', (event) => {\n    const date = event.target.dataset.match;\n\n    if(!date) {\n        return;\n    }\n\n    // previous match\n    fetchMatch(parseInt(date), today);\n});\n\nfunction fetchMatch(date, today) {\n    const fullDate = `${fullYear}-${currMonth+1}-${date}`;\n    const fetchEvent = `${baseURL}/event?date=${fullDate}`;\n    const fetchMatch = `${baseURL}/matches?date=${fullDate}`;\n    \n    (today - date) > 0 ? fetchMatchResult(fetchMatch) : fetchEventInfo(fetchEvent);\n}\n\nfunction fetchMatchResult(url) {\n    fetch(url, {\n        method: \"GET\",\n        // headers: getHeaders(),\n        headers: {\n            'content-type': \"application/json\"\n        },\n    })\n    .then(res => res.json())\n    .then(res => {\n        displayMatchResult(res);\n    })\n    .catch(error => {\n        console.log(error);\n    });\n}\n\nconst matchInfo = document.querySelector('#match-info');\nfunction displayMatchResult(result) {\n    matchInfo.removeAttribute('invisible');\n    for(let i=0; i<result.length; i++) {\n        matchInfo.innerHTML += `<div class=\"match-info__result\">\n            <h3>Court : ${result[i].courtNum}</h3>\n            <p>${result[i].playerA1}  :  ${result[i].playerB1}</p>\n            <p>${result[i].playerA2}  :  ${result[i].playerB2}</p>\n            <p>${result[i].scoreA} : ${result[i].scoreB}</p>\n            </div>`\n    }\n}\n\nfunction fetchEventInfo(url) {\n    fetch(url, {\n        method: \"GET\",\n        headers: {\n            'content-type': \"application/json\"\n        },\n    })\n    .then(res => res.json())\n    .then(res => {\n        console.log(res);\n    })\n    .catch(error => {\n        console.log(error);\n    });\n}\n\ndisplayEvents();\n\n// Get event info by month\nfunction displayEvents() {\n    // Post the json to the backend \n    // currMonth start from 0\n    fetch(`${baseURL}/event?month=${currMonth+1}&year=${currYear}&date=`, {\n        method: \"GET\",\n        headers: {\n            'content-Type': \"application/json\"\n        },\n    })\n    .then(res => res.json())\n    .then(res => {\n        displayMatchDays(res);\n        updateJoinMatchText(res);\n    })\n    .catch(error => {\n        console.log(error);\n        console.log(\"Get events request failed\");\n    });\n}\n\nfunction getJoinMatchInfo() {\n    if(!sessionStorage.getItem(\"isLogin\")) {\n        return;\n    }\n\n    const username = sessionStorage.getItem(\"username\");\n\n    if(!username) {\n        return;\n    }\n\n    const date = localStorage.getItem(\"UpcomingMatch\");\n\n    if(!date) {\n        return;\n    }\n\n    fetch(`${baseURL}/players?username=${username}&date=${date}`, {\n        method: \"GET\",\n        headers: {\n            'content-Type': \"application/json\"\n        },\n    })\n    .then(res => {\n        if(res.status === 400) {\n            // player not exist\n            localStorage.removeItem(\"PlayerId\");\n            displayJoinMatch('join');\n            return;\n        } else {\n            return res.json();\n        }\n    })\n    .then(res => {\n        // user already joined a match game\n        if(res.id != 'undefined') {\n            localStorage.setItem(\"PlayerId\", `${res.id}`);\n            displayJoinMatch('cancel');\n        }\n    })\n    .catch(error => {\n        localStorage.removeItem(\"PlayerId\");\n        displayJoinMatch('join');\n    });\n}\n\n// Join match\nconst joinMatch = document.querySelector('#join-match');\nconst matchText = document.querySelector('.join-match__text');\n\n// Cancel join match\nconst joinMatchBtn = document.querySelector('.join-match__btn');\nconst cancelMatchBtn = document.querySelector('.cancel-match__btn');\n\njoinMatchBtn.addEventListener('click', () => {\n    const username = sessionStorage.getItem('username');\n\n    // check if user log out\n    if(!sessionStorage.getItem('isLogin') && !username) {\n        window.location.href = \"../public/component/login.html\";\n        return;\n    }\n\n    const matchDate = matchText.getAttribute(\"data-date\");\n\n    if(!matchDate) {\n        return;\n    }\n\n    // send the jason to the backend\n    fetch(`${baseURL}/players`, {\n        method: \"POST\",\n        headers: {\n            'content-Type': \"application/json\" \n        },\n        body: JSON.stringify({username: `${username}`, date: `${matchDate}`})\n    })\n    .then(res => res.json())\n    .then(res => {\n        console.log(\"join match response \");\n        console.log(res);\n        // save playerId \n        if(!res.id) {\n            localStorage.setItem(\"PlayerId\", `${res}`)\n            // display join cancel button\n            displayJoinMatch('cancel');\n        }\n        // cancelMatchBtn.setAttribute(\"data-playerId\", `${res.id}`);\n        // console.log(cance.MatchBtn.getAttribute(\"data-playerId\"));\n    })\n    .catch(error => {\n        console.log(error);\n        console.log(\"Fail to join match play\");\n    });\n})\n\nfunction displayJoinMatch(status) {\n    if(status === 'join') {\n        joinMatchBtn.classList.remove('invisible');\n        cancelMatchBtn.classList.add('invisible');\n    } else if(status === 'cancel') {\n        joinMatchBtn.classList.add('invisible');\n        cancelMatchBtn.classList.remove('invisible');\n    }\n}\n\ncancelMatchBtn.addEventListener('click', () => {\n    // id from playersDB\n    const playerId = localStorage.getItem(\"PlayerId\");\n\n    fetch(`${baseURL}/players/${playerId}`, {\n        method: \"DELETE\",\n        headers: {\n            'content-Type': \"application/json\" \n        },\n    })\n    .then(res => {\n        // display join match button\n        displayJoinMatch('join');\n        localStorage.removeItem('PlayerId');\n    })\n    .catch(error => {\n        console.log(error);\n        console.log(\"Fail to cancel match play\");\n    });\n})\n\n// if user already joind match play\ngetJoinMatchInfo();\n\nfunction getFormatDate (date) {\n    let month = (date.getMonth() + 1).toString();\n    let day = date.getDate().toString();\n    let year = date.getFullYear();\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n    return [year, month, day].join('-');\n}\n\nfunction updateJoinMatchText(matches) {\n    const upcomingDate = findUpcomingDate(matches);\n\n    if(upcomingDate == undefined) {\n        joinMatch.setAttribute(\"class\", \"invisible\");\n        joinMatchBtn.setAttribute(\"class\", \"invisible\");\n        localStorage.removeItem(\"UpcomingMatch\");\n    } else {\n        const formatDate = getFormatDate(upcomingDate);\n        matchText.innerHTML = `Upcoming match game <br /> ${upcomingDate.getDate()}  ${monthString[upcomingDate.getMonth()]} ${upcomingDate.getFullYear()}  `;\n        matchText.setAttribute(\"data-date\", `${formatDate}`);\n        joinMatch.removeAttribute(\"invisible\");\n        localStorage.setItem(\"UpcomingMatch\", `${formatDate}`);\n    }    \n}\n\nfunction findUpcomingDate(matches) {\n    const today = new Date();\n\n    for(let i=0; i<matches.length; i++) {\n        const matchDate = new Date(matches[i][\"date\"]);\n        const timeDiff = matchDate - today;\n        \n        if (timeDiff > 1) {\n            const hours = Math.floor(timeDiff / 1000 / 60 / 60);\n\n            if (hours > 1 && hours < 168) {\n                return matchDate;\n            }\n        }\n    }\n\n    return undefined;\n}\n\nfunction displayMatchDays(matches) {\n    for(let i=0; i<matches.length; i++) {\n        const dateOfMonth = new Date(matches[i][\"date\"]);\n        const date = dateOfMonth.getDate();\n\n        for(let j=1; j<=lastDayOfMonth[monthNum]; j++) {\n            const day = document.querySelector(`.day[data-day=\"${j}\"]`);\n\n           if(day.dataset.day === date.toString()) {\n               day.innerHTML = `<span class=\"matches\" data-match=${day.dataset.day}>${j}</span>`;\n           }\n        }\n    }\n}\n\nfunction getHeaders() {\n    const token = localStorage.getItem('TOKEN')\n    return {\n        Authorization: `Bearer ${token}`,\n    };\n}"],"names":["baseURL","window","onload","localStorage","getItem","document","getElementById","checked","documentElement","classList","toggle","displayJoinMatch","sessionStorage","querySelector","add","remove","navBarIcon","navBarMenu","icon","navBarLogo","addEventListener","scrollIntoView","behavior","block","inline","event","link","target","dataset","signUp","location","themeToggle","console","log","setItem","logout","clear","date","Date","monthNum","getMonth","fullYear","getFullYear","today","getDate","monthString","lastDayOfMonth","currMonth","currYear","month","innerHTML","days","i","fetchMatch","date2","today1","fullDate","fetchEvent","fetchMatchResult","fetchEventInfo","url","fetch","method","headers","then","res","json","displayMatchResult","catch","error","date1","match","parseInt","matchInfo","result","removeAttribute","i1","length","courtNum","playerA1","playerB1","playerA2","playerB2","scoreA","scoreB","displayEvents","displayMatchDays","updateJoinMatchText","getJoinMatchInfo","username","date3","status","removeItem","id","joinMatch","matchText","joinMatchBtn","cancelMatchBtn","getFormatDate","date4","month1","toString","day","year","join","matches","upcomingDate","findUpcomingDate","undefined","setAttribute","formatDate","today2","i2","matchDate","timeDiff","hours","Math","floor","i3","date5","j","getHeaders","Authorization","href","getAttribute","body","JSON","stringify","playerId"],"version":3,"file":"index.5d231e39.js.map"}